name: Deploy Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: bistecquizz-backend-dev
  CORS_ALLOWED_ORIGINS: https://bistecquizz-frontend-dev.azurewebsites.net
  AZURE_RESOURCE_GROUP_NAME: bistecquizz-dev-rgd041c3fc

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Install Dependencies
      run: |
        cd backend
        npm install

    - name: Prepare for production
      run: |
        cd backend
        # Create a production build directory
        mkdir -p build
        # Copy necessary files
        cp package.json build/
        cp -r server.js config controllers db middleware models routes utils services build/
        cd build
        # Install production dependencies
        npm install --production
        # Create a startup command file
        echo "cd /home/site/wwwroot && npm start" > startup.sh
        chmod +x startup.sh

    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.BACKEND_PUBLISH_PROFILE }}
        package: backend/build

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure startup command
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp config set --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} --name ${{ env.AZURE_WEBAPP_NAME }} --startup-file /home/site/wwwroot/startup.sh --linux-fx-version "NODE|20-lts"

    - name: Configure App Settings
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp config appsettings set --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} --name ${{ env.AZURE_WEBAPP_NAME }} --settings \
            PORT=8080 \
            JWT_SECRET=${{ secrets.JWT_SECRET }} \
            CORS_ALLOWED_ORIGINS=${{ env.CORS_ALLOWED_ORIGINS }} \
            ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} \
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
            DB_TYPE=mssql \
            MSSQL_USER=${{ secrets.MSSQL_USER }} \
            MSSQL_PASSWORD=${{ secrets.MSSQL_PASSWORD }} \
            MSSQL_SERVER=${{ secrets.MSSQL_SERVER }} \
            MSSQL_DATABASE=${{ secrets.MSSQL_DATABASE }} \
            MSSQL_ENCRYPT=true \
            MSSQL_TRUST_SERVER_CERTIFICATE=false